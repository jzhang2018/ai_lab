---

# ------------------ Install Ollama ------------------ #
- name: Check if Ollama is installed via --version
  ansible.builtin.shell: ollama --version 2>/dev/null || true
  register: ollama_check
  changed_when: false

- name: Determine if Ollama is installed
  ansible.builtin.set_fact:
    ollama_installed: "{{ ollama_check.stdout is match('^Ollama\\s+\\d+') }}"

- block:
  - name: Install Ollama if not present. It might take a while ...
    ansible.builtin.shell: |
      curl -fsSL https://ollama.com/install.sh | sh
    args:
      executable: /bin/bash
    become: true  # it is recommanded to install Ollama as root as it is set up as a systemd service
    
  - name: Verify Ollama is installed
    ansible.builtin.command: ollama --version
    register: ollama_version
    ignore_errors: true

  - name: Display Ollama version
    ansible.builtin.debug:
      msg: "Ollama version: {{ ollama_version.stdout }}"
  when: not ollama_installed

# allow Ollama to listen on all interfaces (0.0.0.0)
- name: Ensure Ollama systemd override dir exists
  ansible.builtin.file:
    path: /etc/systemd/system/ollama.service.d
    state: directory
    mode: '0755'
  become: true

- name: Set OLLAMA_HOST via systemd override
  ansible.builtin.copy:
    dest: /etc/systemd/system/ollama.service.d/override.conf
    content: |
      [Service]
      Environment=OLLAMA_HOST=0.0.0.0
    mode: '0644'
    owner: root
    group: root
  become: true

- name: Reload systemd
  become: true
  ansible.builtin.systemd:
    daemon_reload: true

- name: Restart ollama service
  become: true
  ansible.builtin.systemd:
    name: ollama
    state: restarted

- name: Ensure Ollama service is running
  become: true
  ansible.builtin.systemd:
    name: ollama
    state: started
    enabled: true
